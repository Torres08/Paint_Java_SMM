package paintbasico;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.List;
import java.awt.Point;
import java.awt.Shape;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.util.ArrayList;
import static paintbasico.Forma.ELIPSE;
import static paintbasico.Forma.LINEA;
import static paintbasico.Forma.RECTANGULO;

/**
 *
 * @author torres
 */
public class Lienzo extends javax.swing.JPanel {

    /**
     * Creates new form Lienzo
     */
    public Lienzo() {
        initComponents();
    }
    // variables
     private Shape forma = new Line2D.Float(0,0,0,0); // por defecto es una linea en el 0, 70 70 200
    //List<Shape> vShape = new ArrayList<>();
    private Forma TipoForma = Forma.LINEA; // para estudiar los distintos casos
    private Color color = Color.BLACK; // por defecto el negro
    private Boolean relleno = false;
    private Point puntoInicial = null;
    
    // punto final e inicial?
    
    // override al paint
    @Override
    public void paint(Graphics g){
        super.paint(g);        
        Graphics2D g2d = (Graphics2D) g;
        g2d.setPaint(color);
        
        // bolean para relleno 
        if (relleno)
            g2d.fill(forma); 
        
        g2d.draw(forma);
        
        /*
        for(Shape s:vShape){
             g2d.draw(s);
        }
        */
        
    }
    
    // gets & setters
    public Color getColor() {
        return color;
    }

    public void setColor(Color color) {
        System.out.println("Cambio color a " + color);
        this.color = color;
    } 
    
    public Shape getForma() {
        return forma;
    }
    
    public void setForma(Forma forma) {
        System.out.println("Cambio forma a " + forma);
        this.TipoForma = forma;

    }
    
    public Boolean getRelleno() {
        return relleno;
    }

    public void setRelleno(Boolean relleno) {
        this.relleno = relleno;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        
        // System.out.println("Pressed");
        // estudiar varios casos segun Forma enum 
        // Shape forma
        
        puntoInicial = evt.getPoint();
      
        switch(TipoForma){  
            case LINEA ->  {
                forma = new Line2D.Float(evt.getPoint(), evt.getPoint());
            }
            case RECTANGULO ->  {
                forma = new Rectangle2D.Float(evt.getPoint().x, evt.getPoint().y, 0, 0);
            }
            case ELIPSE -> {
                forma = new Ellipse2D.Float(evt.getPoint().x, evt.getPoint().y, 0, 0);
            }
        }
        
        //vShape.add(linea);
        
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        //linea.setLine(linea.getP1(), evt.getPoint());
        // System.out.println("Dragged");
        // if del getclass forma.instanceof 
        // if (forma instanceof Line2D
        
        // almacenar punto mejor
        
        if (forma instanceof Line2D linea) {
             linea.setLine(puntoInicial, evt.getPoint());
        } else if (forma instanceof Rectangle2D rectangulo) {
            rectangulo.setFrameFromDiagonal(puntoInicial.x, puntoInicial.y, evt.getPoint().x, evt.getPoint().y);
        } else if (forma instanceof Ellipse2D elipse) {
            elipse.setFrameFromDiagonal(puntoInicial.x, puntoInicial.y, evt.getPoint().x, evt.getPoint().y);
        }

        
        

        this.repaint();
        
    }//GEN-LAST:event_formMouseDragged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
